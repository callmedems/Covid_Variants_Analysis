for (i in 1:length(secuencias_paises)) {
nucleotidos_calc(secuencias_paises[[i]], basename(nombres_paises[i]))
}
nucleotidos_frecuencia <- function(secuencia) {
nucleotidos <- c("A", "C", "G", "T")
freq_nucleotidos <- alphabetFrequency(secuencia, baseOnly = TRUE)
return(freq_nucleotidos)
}
# Calcular frecuencia de nucleótidos para cada país
frecuencias <- lapply(secuencias_paises, nucleotidos_frecuencia)
# Crear un data frame con los nombres de los países y las frecuencias de nucleótidos
data <- data.frame(Pais = nombres_paises, do.call(rbind, frecuencias))
# Reordenar las columnas
data <- data[, c("Pais", "A", "C", "G", "T")]
# Reestructurar los datos a formato largo (tidy)
data_long <- tidyr::gather(data, Nucleotido, Frecuencia, -Pais)
# Graficar
ggplot(data_long, aes(x = Pais, y = Frecuencia, fill = Nucleotido)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Frecuencia de Nucleótidos por País",
x = "País",
y = "Frecuencia (cantidad)",
fill = "Nucleótido") +
scale_fill_manual(values = c("red", "blue", "green", "orange"),
labels = c("A", "C", "G", "T")) +
scale_y_continuous(breaks = seq(0, 10000, by = 500), limits = c(0, 10000)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Calcular frecuencia de nucleótidos para cada país
frecuencias <- lapply(secuencias_paises, nucleotidos_frecuencia)
# Convertir la lista de frecuencias en una matriz
frecuencias_matriz <- do.call(rbind, frecuencias)
# Calcular la distancia entre las secuencias usando la distancia de Jaccard
distancia_jaccard <- dist(frecuencias_matriz, method = "binary")
# Realizar el análisis jerárquico global
arbol_jerarquico <- hclust(distancia_jaccard, method = "complete")
# Convertir el resultado a un objeto de clase 'phylo'
arbol_phylo <- as.phylo(arbol_jerarquico)
# Crear un objeto de clase 'ggtree'
arbol_ggtree <- ggtree(arbol_phylo)
# Graficar el árbol con ggtree
arbol_ggtree +
geom_tiplab(align = TRUE, size = 3) +  # Ajusta el tamaño de las etiquetas y alinea
theme_tree2() +
labs(title = "Árbol filogenético de países basado en secuencias de ADN",
subtitle = "Distancia de Jaccard",
caption = "Data source: Sequences",
x = "País")
)
library(BiocManager)
library(Biostrings)
library(ggplot2)
library(ape)
library(cluster)
library(ggtree)
nombres_paises <- c("USA",
"JAPAN",
"GERMANY",
"RUSSIA",
"SOUTH KOREA",
"TAIWAN",
"BRAZIL",
"AUSTRIA",
"ITALY",
"UNITED KINGDOM",
"FRANCE",
"MEXICO",
"AUSTRALIA",
"CHILE",
"POLAND",
"CANADA",
"BELGIUM",
"NEW ZEALAND",
"SPAIN",
"CZECHIA")
#mostrar las rutas
rutas_paises <- c("D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceUSA.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceJAPAN.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceGERMANY.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceRUSSIA.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceSOUTHKOREA.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceTAIWAN.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceBRAZIL.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceAUSTRIA.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceITALY.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceUK.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceFRANCE.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceMEXICO.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceAUSTRALIA.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceCHILE.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequencePOLAND.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceCANADA.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceBELGIUM.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceNZ.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceSPAIN.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceCZECHIA.fasta")
# Leer las secuencias de ADN desde los archivos de los países
secuencias_paises <- lapply(rutas_paises, readDNAStringSet)
# Calcula la longitud de las secuencias
longitudes <- sapply(secuencias_paises, width)
# Imprime las longitudes de las secuencias
cat("Longitudes de las secuencias de ADN por país:\n")
for (i in seq_along(longitudes)) {
cat("País:", basename(nombres_paises[i]), "- Longitud:", longitudes[i], "\n")
}
nucleotidos_calc <- function(secuencia, pais){
nucleotidos <- c("A", "C", "G", "T")
freq_nucleotidos <- alphabetFrequency(secuencia, baseOnly = TRUE)
names(freq_nucleotidos) <- nucleotidos
cat("En secuencia de ", pais, ":\n", sep = "")
for (n in nucleotidos){
cat(n, ": ", freq_nucleotidos[[n]], "\n", sep = "")
}
cat("\n")
}
for (i in 1:length(secuencias_paises)) {
nucleotidos_calc(secuencias_paises[[i]], basename(nombres_paises[i]))
}
nucleotidos_frecuencia <- function(secuencia) {
nucleotidos <- c("A", "C", "G", "T")
freq_nucleotidos <- alphabetFrequency(secuencia, baseOnly = TRUE)
return(freq_nucleotidos)
}
# Calcular frecuencia de nucleótidos para cada país
frecuencias <- lapply(secuencias_paises, nucleotidos_frecuencia)
# Crear un data frame con los nombres de los países y las frecuencias de nucleótidos
data <- data.frame(Pais = nombres_paises, do.call(rbind, frecuencias))
# Reordenar las columnas
data <- data[, c("Pais", "A", "C", "G", "T")]
# Reestructurar los datos a formato largo (tidy)
data_long <- tidyr::gather(data, Nucleotido, Frecuencia, -Pais)
# Graficar
ggplot(data_long, aes(x = Pais, y = Frecuencia, fill = Nucleotido)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Frecuencia de Nucleótidos por País",
x = "País",
y = "Frecuencia (cantidad)",
fill = "Nucleótido") +
scale_fill_manual(values = c("red", "blue", "green", "orange"),
labels = c("A", "C", "G", "T")) +
scale_y_continuous(breaks = seq(0, 10000, by = 500), limits = c(0, 10000)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Calcular frecuencia de nucleótidos para cada país
frecuencias <- lapply(secuencias_paises, nucleotidos_frecuencia)
# Convertir la lista de frecuencias en una matriz
frecuencias_matriz <- do.call(rbind, frecuencias)
# Calcular la distancia entre las secuencias usando la distancia de Jaccard
distancia_jaccard <- dist(frecuencias_matriz, method = "binary")
# Realizar el análisis jerárquico global
arbol_jerarquico <- hclust(distancia_jaccard, method = "complete")
# Convertir el resultado a un objeto de clase 'phylo'
arbol_phylo <- as.phylo(arbol_jerarquico)
# Crear un objeto de clase 'ggtree'
arbol_ggtree <- ggtree(arbol_phylo)
# Graficar el árbol con ggtree
arbol_ggtree +
geom_tiplab(align = TRUE, size = 3) +  # Ajusta el tamaño de las etiquetas y alinea
theme_tree2() +
labs(title = "Árbol filogenético de países basado en secuencias de ADN",
subtitle = "Distancia de Jaccard",
caption = "Data source: Sequences",
x = "País"))
library(BiocManager)
library(Biostrings)
library(ggplot2)
library(ape)
library(cluster)
library(ggtree)
nombres_paises <- c("USA",
"JAPAN",
"GERMANY",
"RUSSIA",
"SOUTH KOREA",
"TAIWAN",
"BRAZIL",
"AUSTRIA",
"ITALY",
"UNITED KINGDOM",
"FRANCE",
"MEXICO",
"AUSTRALIA",
"CHILE",
"POLAND",
"CANADA",
"BELGIUM",
"NEW ZEALAND",
"SPAIN",
"CZECHIA")
#mostrar las rutas
rutas_paises <- c("D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceUSA.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceJAPAN.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceGERMANY.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceRUSSIA.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceSOUTHKOREA.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceTAIWAN.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceBRAZIL.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceAUSTRIA.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceITALY.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceUK.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceFRANCE.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceMEXICO.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceAUSTRALIA.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceCHILE.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequencePOLAND.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceCANADA.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceBELGIUM.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceNZ.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceSPAIN.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceCZECHIA.fasta")
# Leer las secuencias de ADN desde los archivos de los países
secuencias_paises <- lapply(rutas_paises, readDNAStringSet)
# Calcula la longitud de las secuencias
longitudes <- sapply(secuencias_paises, width)
# Imprime las longitudes de las secuencias
cat("Longitudes de las secuencias de ADN por país:\n")
for (i in seq_along(longitudes)) {
cat("País:", basename(nombres_paises[i]), "- Longitud:", longitudes[i], "\n")
}
nucleotidos_calc <- function(secuencia, pais){
nucleotidos <- c("A", "C", "G", "T")
freq_nucleotidos <- alphabetFrequency(secuencia, baseOnly = TRUE)
names(freq_nucleotidos) <- nucleotidos
cat("En secuencia de ", pais, ":\n", sep = "")
for (n in nucleotidos){
cat(n, ": ", freq_nucleotidos[[n]], "\n", sep = "")
}
cat("\n")
}
for (i in 1:length(secuencias_paises)) {
nucleotidos_calc(secuencias_paises[[i]], basename(nombres_paises[i]))
}
nucleotidos_frecuencia <- function(secuencia) {
nucleotidos <- c("A", "C", "G", "T")
freq_nucleotidos <- alphabetFrequency(secuencia, baseOnly = TRUE)
return(freq_nucleotidos)
}
# Calcular frecuencia de nucleótidos para cada país
frecuencias <- lapply(secuencias_paises, nucleotidos_frecuencia)
# Crear un data frame con los nombres de los países y las frecuencias de nucleótidos
data <- data.frame(Pais = nombres_paises, do.call(rbind, frecuencias))
# Reordenar las columnas
data <- data[, c("Pais", "A", "C", "G", "T")]
# Reestructurar los datos a formato largo (tidy)
data_long <- tidyr::gather(data, Nucleotido, Frecuencia, -Pais)
# Graficar
ggplot(data_long, aes(x = Pais, y = Frecuencia, fill = Nucleotido)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Frecuencia de Nucleótidos por País",
x = "País",
y = "Frecuencia (cantidad)",
fill = "Nucleótido") +
scale_fill_manual(values = c("red", "blue", "green", "orange"),
labels = c("A", "C", "G", "T")) +
scale_y_continuous(breaks = seq(0, 10000, by = 500), limits = c(0, 10000)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Calcular frecuencia de nucleótidos para cada país
frecuencias <- lapply(secuencias_paises, nucleotidos_frecuencia)
# Convertir la lista de frecuencias en una matriz
frecuencias_matriz <- do.call(rbind, frecuencias)
# Calcular la distancia entre las secuencias usando la distancia de Jaccard
distancia_jaccard <- dist(frecuencias_matriz, method = "binary")
# Realizar el análisis jerárquico global
arbol_jerarquico <- hclust(distancia_jaccard, method = "complete")
# Convertir el resultado a un objeto de clase 'phylo'
arbol_phylo <- as.phylo(arbol_jerarquico)
# Crear un objeto de clase 'ggtree'
arbol_ggtree <- ggtree(arbol_phylo)
# Graficar el árbol con ggtree
arbol_ggtree +
geom_tiplab(align = TRUE, size = 3) +  # Ajusta el tamaño de las etiquetas y alinea
theme_tree2() +
labs(title = "Árbol filogenético de países basado en secuencias de ADN",
subtitle = "Distancia de Jaccard",
caption = "Data source: Sequences",
x = "País")
library(BiocManager)
library(Biostrings)
library(ggplot2)
library(ape)
library(cluster)
library(ggtree)
nombres_paises <- c("USA",
"JAPAN",
"GERMANY",
"RUSSIA",
"SOUTH KOREA",
"TAIWAN",
"BRAZIL",
"AUSTRIA",
"ITALY",
"UNITED KINGDOM",
"FRANCE",
"MEXICO",
"AUSTRALIA",
"CHILE",
"POLAND",
"CANADA",
"BELGIUM",
"NEW ZEALAND",
"SPAIN",
"CZECHIA")
#mostrar las rutas
rutas_paises <- c("D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceUSA.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceJAPAN.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceGERMANY.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceRUSSIA.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceSOUTHKOREA.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceTAIWAN.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceBRAZIL.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceAUSTRIA.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceITALY.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceUK.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceFRANCE.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceMEXICO.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceAUSTRALIA.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceCHILE.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequencePOLAND.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceCANADA.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceBELGIUM.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceNZ.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceSPAIN.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceCZECHIA.fasta")
# Leer las secuencias de ADN desde los archivos de los países
secuencias_paises <- lapply(rutas_paises, readDNAStringSet)
# Calcula la longitud de las secuencias
longitudes <- sapply(secuencias_paises, width)
# Imprime las longitudes de las secuencias
cat("Longitudes de las secuencias de ADN por país:\n")
for (i in seq_along(longitudes)) {
cat("País:", basename(nombres_paises[i]), "- Longitud:", longitudes[i], "\n")
}
nucleotidos_calc <- function(secuencia, pais){
nucleotidos <- c("A", "C", "G", "T")
freq_nucleotidos <- alphabetFrequency(secuencia, baseOnly = TRUE)
names(freq_nucleotidos) <- nucleotidos
cat("En secuencia de ", pais, ":\n", sep = "")
for (n in nucleotidos){
cat(n, ": ", freq_nucleotidos[[n]], "\n", sep = "")
}
cat("\n")
}
for (i in 1:length(secuencias_paises)) {
nucleotidos_calc(secuencias_paises[[i]], basename(nombres_paises[i]))
}
nucleotidos_frecuencia <- function(secuencia) {
nucleotidos <- c("A", "C", "G", "T")
freq_nucleotidos <- alphabetFrequency(secuencia, baseOnly = TRUE)
return(freq_nucleotidos)
}
# Calcular frecuencia de nucleótidos para cada país
frecuencias <- lapply(secuencias_paises, nucleotidos_frecuencia)
# Crear un data frame con los nombres de los países y las frecuencias de nucleótidos
data <- data.frame(Pais = nombres_paises, do.call(rbind, frecuencias))
# Reordenar las columnas
data <- data[, c("Pais", "A", "C", "G", "T")]
# Reestructurar los datos a formato largo (tidy)
data_long <- tidyr::gather(data, Nucleotido, Frecuencia, -Pais)
# Graficar
ggplot(data_long, aes(x = Pais, y = Frecuencia, fill = Nucleotido)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Frecuencia de Nucleótidos por País",
x = "País",
y = "Frecuencia (cantidad)",
fill = "Nucleótido") +
scale_fill_manual(values = c("red", "blue", "green", "orange"),
labels = c("A", "C", "G", "T")) +
scale_y_continuous(breaks = seq(0, 10000, by = 500), limits = c(0, 10000)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Calcular frecuencia de nucleótidos para cada país
frecuencias <- lapply(secuencias_paises, nucleotidos_frecuencia)
# Convertir la lista de frecuencias en una matriz
frecuencias_matriz <- do.call(rbind, frecuencias)
# Calcular la distancia entre las secuencias usando la distancia de Jaccard
distancia_jaccard <- dist(frecuencias_matriz, method = "binary")
# Realizar el análisis jerárquico global
arbol_jerarquico <- hclust(distancia_jaccard, method = "complete")
# Convertir el resultado a un objeto de clase 'phylo'
arbol_phylo <- as.phylo(arbol_jerarquico)
# Crear un objeto de clase 'ggtree'
arbol_ggtree <- ggtree(arbol_phylo)
# Graficar el árbol con ggtree
arbol_ggtree +
geom_tiplab(align = TRUE, size = 3) +  # Ajusta el tamaño de las etiquetas y alinea
theme_tree2() +
labs(title = "Árbol filogenético de países basado en secuencias de ADN",
subtitle = "Distancia de Jaccard",
caption = "Data source: Sequences",
x = "País")
# Graficar
ggplot(data_long, aes(x = Pais, y = Frecuencia, fill = Nucleotido)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Frecuencia de Nucleótidos por País",
x = "País",
y = "Frecuencia (cantidad)",
fill = "Nucleótido") +
scale_fill_manual(values = c("red", "blue", "green", "orange"),
labels = c("A", "C", "G", "T")) +
scale_y_continuous(breaks = seq(0, 10000, by = 500), limits = c(0, 10000)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(BiocManager)
library(Biostrings)
library(ggplot2)
library(ape)
library(cluster)
library(ggtree)
nombres_paises <- c("USA",
"JAPAN",
"GERMANY",
"RUSSIA",
"SOUTH KOREA",
"TAIWAN",
"BRAZIL",
"AUSTRIA",
"ITALY",
"UNITED KINGDOM",
"FRANCE",
"MEXICO",
"AUSTRALIA",
"CHILE",
"POLAND",
"CANADA",
"BELGIUM",
"NEW ZEALAND",
"SPAIN",
"CZECHIA")
#mostrar las rutas
rutas_paises <- c("D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceUSA.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceJAPAN.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceGERMANY.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceRUSSIA.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceSOUTHKOREA.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceTAIWAN.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceBRAZIL.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceAUSTRIA.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceITALY.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceUK.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceFRANCE.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceMEXICO.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceAUSTRALIA.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceCHILE.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequencePOLAND.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceCANADA.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceBELGIUM.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceNZ.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceSPAIN.fasta",
"D:\\demmi\\Documents\\R Codes\\Evidencia2\\sequenceCZECHIA.fasta")
# Leer las secuencias de ADN desde los archivos de los países
secuencias_paises <- lapply(rutas_paises, readDNAStringSet)
# Calcula la longitud de las secuencias
longitudes <- sapply(secuencias_paises, width)
# Imprime las longitudes de las secuencias
cat("Longitudes de las secuencias de ADN por país:\n")
for (i in seq_along(longitudes)) {
cat("País:", basename(nombres_paises[i]), "- Longitud:", longitudes[i], "\n")
}
nucleotidos_calc <- function(secuencia, pais){
nucleotidos <- c("A", "C", "G", "T")
freq_nucleotidos <- alphabetFrequency(secuencia, baseOnly = TRUE)
names(freq_nucleotidos) <- nucleotidos
cat("En secuencia de ", pais, ":\n", sep = "")
for (n in nucleotidos){
cat(n, ": ", freq_nucleotidos[[n]], "\n", sep = "")
}
cat("\n")
}
for (i in 1:length(secuencias_paises)) {
nucleotidos_calc(secuencias_paises[[i]], basename(nombres_paises[i]))
}
nucleotidos_frecuencia <- function(secuencia) {
nucleotidos <- c("A", "C", "G", "T")
freq_nucleotidos <- alphabetFrequency(secuencia, baseOnly = TRUE)
return(freq_nucleotidos)
}
# Calcular frecuencia de nucleótidos para cada país
frecuencias <- lapply(secuencias_paises, nucleotidos_frecuencia)
# Crear un data frame con los nombres de los países y las frecuencias de nucleótidos
data <- data.frame(Pais = nombres_paises, do.call(rbind, frecuencias))
# Reordenar las columnas
data <- data[, c("Pais", "A", "C", "G", "T")]
# Reestructurar los datos a formato largo (tidy)
data_long <- tidyr::gather(data, Nucleotido, Frecuencia, -Pais)
# Graficar
ggplot(data_long, aes(x = Pais, y = Frecuencia, fill = Nucleotido)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Frecuencia de Nucleótidos por País",
x = "País",
y = "Frecuencia (cantidad)",
fill = "Nucleótido") +
scale_fill_manual(values = c("red", "blue", "green", "orange"),
labels = c("A", "C", "G", "T")) +
scale_y_continuous(breaks = seq(0, 10000, by = 500), limits = c(0, 10000)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Calcular frecuencia de nucleótidos para cada país
frecuencias <- lapply(secuencias_paises, nucleotidos_frecuencia)
# Convertir la lista de frecuencias en una matriz
frecuencias_matriz <- do.call(rbind, frecuencias)
# Calcular la distancia entre las secuencias usando la distancia de Jaccard
distancia_jaccard <- dist(frecuencias_matriz, method = "binary")
# Realizar el análisis jerárquico global
arbol_jerarquico <- hclust(distancia_jaccard, method = "complete")
# Crear un objeto de clase 'phylo' con nombres de países
arbol_phylo <- as.phylo(arbol_jerarquico, labels = setNames(nombres_paises, NULL))
# Crear un objeto de clase 'ggtree'
arbol_ggtree <- ggtree(arbol_phylo, ladderize = "right") +
geom_tiplab(align = TRUE, size = 3) +  # Ajusta el tamaño de las etiquetas y alinea
theme_tree2() +
labs(title = "Árbol filogenético de países basado en secuencias de ADN",
subtitle = "Distancia de Jaccard",
caption = "Data source: Sequences",
x = "Distancia de Jaccard",
y = "País")
# Graficar el árbol con ggtree
arbol_ggtree
